STOCK_SWING_REALISED_PORTFOLIO_VIEW = '''
CREATE VIEW STOCK_SWING_REALISED_PORTFOLIO_VIEW AS
SELECT
    OUTER_SUB.STOCK_NAME                              AS STOCK_NAME
    ,OUTER_SUB.OPENING_TRADE_ID                       AS OPENING_TRADE_ID
    ,OUTER_SUB.CLOSING_TRADE_ID                       AS CLOSING_TRADE_ID
    ,OUTER_SUB.OPENING_FEE_ID                         AS OPENING_FEE_ID
    ,OUTER_SUB.CLOSING_FEE_ID                         AS CLOSING_FEE_ID
    ,OUTER_SUB.OPENING_STOCK_QUANTITY                 AS OPENING_STOCK_QUANTITY
    ,OUTER_SUB.CLOSING_STOCK_QUANTITY                 AS CLOSING_STOCK_QUANTITY
    ,OUTER_SUB.TRADE_OPEN_DATE                        AS TRADE_OPEN_DATE
    ,OUTER_SUB.TRADE_CLOSE_DATE                       AS TRADE_CLOSE_DATE
    ,OUTER_SUB.BUY_PRICE                              AS BUY_PRICE
    ,OUTER_SUB.SELL_PRICE                             AS SELL_PRICE
    ,ROUND(OUTER_SUB.SELL_PRICE -
    OUTER_SUB.BUY_PRICE, 4)                           AS SELL_MINUS_BUY_PRICE
    ,ROUND((OUTER_SUB.SELL_PRICE -
    OUTER_SUB.BUY_PRICE) * CLOSING_STOCK_QUANTITY,4)  AS "P/L"
FROM
(
SELECT
    INNER_SUB.STOCK_NAME                              AS STOCK_NAME
    ,INNER_SUB.OPENING_TRADE_ID                       AS OPENING_TRADE_ID
    ,INNER_SUB.CLOSING_TRADE_ID                       AS CLOSING_TRADE_ID
    ,INNER_SUB.OPENING_FEE_ID                         AS OPENING_FEE_ID
    ,INNER_SUB.CLOSING_FEE_ID                         AS CLOSING_FEE_ID
    ,INNER_SUB.OPENING_STOCK_QUANTITY                 AS OPENING_STOCK_QUANTITY
    ,INNER_SUB.CLOSING_STOCK_QUANTITY                 AS CLOSING_STOCK_QUANTITY
    ,INNER_SUB.TRADE_OPEN_DATE                        AS TRADE_OPEN_DATE
    ,INNER_SUB.TRADE_CLOSE_DATE                       AS TRADE_CLOSE_DATE
    ,CASE WHEN OPENING_BUY_OR_SELL = 'B'
          THEN OPENING_TRADE_PRICE_PER_UNIT
          WHEN CLOSING_BUY_OR_SELL = 'B'
          THEN CLOSING_TRADE_PRICE_PER_UNIT END       AS BUY_PRICE
    ,CASE WHEN OPENING_BUY_OR_SELL = 'S'
          THEN OPENING_TRADE_PRICE_PER_UNIT
          WHEN CLOSING_BUY_OR_SELL = 'S'
          THEN CLOSING_TRADE_PRICE_PER_UNIT END       AS SELL_PRICE
FROM
(
SELECT
    OPEN_TRD.TRADE_ID                                 AS OPENING_TRADE_ID
    ,OPEN_TRD.FEE_ID                                  AS OPENING_FEE_ID
    ,OPEN_TRD.STOCK_NAME                              AS STOCK_NAME
    ,OPEN_TRD.TRADE_DATE                              AS TRADE_OPEN_DATE
    ,OPEN_TRD.BUY_OR_SELL                             AS OPENING_BUY_OR_SELL
    ,OPEN_TRD.STOCK_QUANTITY                          AS OPENING_STOCK_QUANTITY
    ,OPEN_TRD.NET_TRADE_PRICE_PER_UNIT                AS OPENING_TRADE_PRICE_PER_UNIT
    ,CLOSE_TRD.CLOSING_TRADE_ID                       AS CLOSING_TRADE_ID
    ,CLOSE_TRD.CLOSING_TRADE_DATE                     AS TRADE_CLOSE_DATE
    ,CLOSE_TRD.CLOSING_TRADE_BUY_OR_SELL              AS CLOSING_BUY_OR_SELL
    ,CLOSE_TRD.CLOSING_TRADE_STOCK_QUANTITY           AS CLOSING_STOCK_QUANTITY
    ,CLOSE_TRD_INFO.NET_TRADE_PRICE_PER_UNIT          AS CLOSING_TRADE_PRICE_PER_UNIT
    ,CLOSE_TRD_INFO.FEE_ID                            AS CLOSING_FEE_ID
FROM
    TRADES OPEN_TRD
INNER JOIN -- TO FILTER OUT ACTUALLY OPEN TRADES AND ALLOW ONLY CLOSED ONES
    CLOSE_TRADES CLOSE_TRD
ON
    OPEN_TRD.TRADE_ID = CLOSE_TRD.OPENING_TRADE_ID
INNER JOIN
    TRADES CLOSE_TRD_INFO
ON
    CLOSE_TRD_INFO.TRADE_ID = CLOSE_TRD.CLOSING_TRADE_ID
WHERE
    OPEN_TRD.TRADE_EXIT_DATE IS NULL
) INNER_SUB
GROUP BY 1,2,3,4,5,6,7
) OUTER_SUB
ORDER BY 1,2,3,4,5,6,7
;
'''